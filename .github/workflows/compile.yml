name: build and release

on:
  push:
    branches:
      - main
    tags:
      - "*"

permissions:
  contents: write

jobs:
  build:
    name: ${{ matrix.platform.os_name }} with rust ${{ matrix.toolchain }}
    runs-on: ${{ matrix.platform.os }}
    if: github.ref == 'refs/heads/main'
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os_name: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            bin: virus-analyzer-linux-amd64
          - os_name: macOS-x86_64
            os: macos-latest
            target: x86_64-apple-darwin
            bin: virus-analyzer-macos-amd64
          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: virus-analyzer-windows-amd64.exe
        toolchain:
          - stable
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Install cargo check tools
        run: |
          rm -rf ~/.cargo/advisory-db
          cargo install --locked cargo-audit || true
          cargo install --locked cargo-pants || true
      - name: Check
        run: |
          cargo audit
          cargo pants
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          args: "--locked --release"
          strip: true
      - name: Rename binary
        run: mv target/${{ matrix.platform.target }}/release/virus-analyzer target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
        shell: bash
      - name: Generate SHA-256
        run: |
          if [[ ${{ runner.os }} == 'Windows' ]]; then
            certUtil -hashfile target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }} SHA256 |  findstr /v "CertUtil" | findstr /v "hash" > target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}.sha256
          else
            shasum -a 256 target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }} | cut -d ' ' -f 1 > target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}.sha256
          fi
        shell: bash

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: release
          path: release
      - name: Release binary and SHA-256 checksum to GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
            release/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}.sha256
